Clocus <- subset(preg_MatchMaker_wb_1, Locus == "C")
# get only mothers with 1 Pregnancy
Alocus_1 <- subset(Alocus, Preg == "1")
Blocus_1 <- subset(Blocus, Preg == "1")
Clocus_1 <- subset(Clocus, Preg == "1")
# No of all mothers
No_ALocus_1 <- nrow(unique(Alocus_1 ["PatientID"]))
No_BLocus_1 <- nrow(unique(Blocus_1 ["PatientID"]))
No_CLocus_1 <- nrow(unique(Clocus_1 ["PatientID"]))
# Add the missing patients; epitopes are the same in mother and child
No_All_Patients_A_1 <- No_ALocus_1+2
No_All_Patients_B_1 <- No_BLocus_1+3
No_All_Patients_C_1 <- No_CLocus_1+1
# Remove duplicates
No_A_Alleles_1 <- unique(Alocus_1 [c("PatientID" , "Kid_alleles_ep_MFI.Allele","MFI_baseline")])
No_B_Alleles_1 <- unique(Blocus_1 [c("PatientID" , "Kid_alleles_ep_MFI.Allele","MFI_baseline")])
No_C_Alleles_1 <- unique(Clocus_1 [c("PatientID" , "Kid_alleles_ep_MFI.Allele","MFI_baseline")])
# Sum reactive Allele
No_R_A_Alleles_1 <- length(which(No_A_Alleles_1$`MFI_baseline` >"500"))
No_R_B_Alleles_1 <- length(which(No_B_Alleles_1$`MFI_baseline` >"500"))
No_R_C_Alleles_1<- length(which(No_C_Alleles_1$`MFI_baseline` >"500"))
# calculate the percentage of reactive mothers
mother_R_A_1 <- No_R_A_Alleles_1/No_All_Patients_A_1*100
mother_R_B_1 <- No_R_B_Alleles_1/No_All_Patients_B_1*100
mother_R_C_1 <- No_R_C_Alleles_1/No_All_Patients_C_1*100
# Barplot
barplot(c(mother_R_A_1, mother_R_B_1, mother_R_C_1),
names.arg=c("A","B","C"),
ylim=c(0,25),
col=c("BLUE","GREEN","RED"),
ylab="% of mother reacted",
xlab="Locus")
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# get only one Locus
Alocus <- subset(preg_MatchMaker_wb_1, Locus == "A")
Blocus <- subset(preg_MatchMaker_wb_1, Locus =="B")
Clocus <- subset(preg_MatchMaker_wb_1, Locus == "C")
# get only mothers with 1 Pregnancy
Alocus_2 <- subset(Alocus, Preg > "1")
Blocus_2 <- subset(Blocus, Preg > "1")
Clocus_2 <- subset(Clocus, Preg > "1")
# No of all mothers
No_ALocus_2 <- nrow(unique(Alocus_2 ["PatientID"]))
No_BLocus_2 <- nrow(unique(Blocus_2 ["PatientID"]))
No_CLocus_2 <- nrow(unique(Clocus_2 ["PatientID"]))
# Add the missing patients; epitopes are the same in mother and child
No_All_Patients_A_2 <- No_ALocus_2+1
No_All_Patients_B_2 <- No_BLocus_2+1
No_All_Patients_C_2 <- No_CLocus_2+2
# Remove duplicates
No_A_Alleles_2 <- unique(Alocus_2 [c("PatientID" , "Kid_alleles_ep_MFI.Allele","MFI_baseline")])
No_B_Alleles_2 <- unique(Blocus_2 [c("PatientID" , "Kid_alleles_ep_MFI.Allele","MFI_baseline")])
No_C_Alleles_2 <- unique(Clocus_2 [c("PatientID" , "Kid_alleles_ep_MFI.Allele","MFI_baseline")])
# Sum reactive Allele
No_R_A_Alleles_2 <- length(which(No_A_Alleles_2$`MFI_baseline` >"500"))
No_R_B_Alleles_2 <- length(which(No_B_Alleles_2$`MFI_baseline` >"500"))
No_R_C_Alleles_2 <- length(which(No_C_Alleles_2$`MFI_baseline` >"500"))
# calculate the percentage of reactive mothers
mother_R_A_2 <- No_R_A_Alleles_2/No_All_Patients_A_2*100
mother_R_B_2 <- No_R_B_Alleles_2/No_All_Patients_B_2*100
mother_R_C_2 <- No_R_C_Alleles_2/No_All_Patients_C_2*100
# Barplot
barplot(c(mother_R_A_2, mother_R_B_2, mother_R_C_2),
names.arg=c("A","B","C"),
ylim=c(0,25),
col=c("BLUE","GREEN","RED"),
ylab="% of mother reacted",
xlab="Locus")
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, names.arg=c("A","B","C")
, data=pos_epitope, main="reactive Epitops per Locus", names = c("A","B","C")
xlab="Locus", ylab="%_pos_epitope")
barplot(c(mother_R_A, mother_R_B, mother_R_C),
names.arg=c("A","B","C"),
ylim=c(0,25),
col=c("BLUE","GREEN","RED"),
ylab="% of mother reacted",
xlab="Locus",
main = "Mother reacting over all")
barplot(c(mother_R_A_1, mother_R_B_1, mother_R_C_1),
names.arg=c("A","B","C"),
ylim=c(0,25),
col=c("BLUE","GREEN","RED"),
ylab="% of mother reacted",
xlab="Locus",
main = "Mother reacting 1 Pregnancy")
barplot(c(mother_R_A_2, mother_R_B_2, mother_R_C_2),
names.arg=c("A","B","C"),
ylim=c(0,25),
col=c("BLUE","GREEN","RED"),
ylab="% of mother reacted",
xlab="Locus",
main = "Mother reacting over 1 Pregnancy")
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, names =c("A","B","C")
, data=pos_epitope, main="reactive Epitops per Locus", names = c("A","B","C")
xlab="Locus", ylab="%_pos_epitope")
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope, main="reactive Epitops per Locus", names = c("A","B","C")
xlab="Locus", ylab="%_pos_epitope")
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitops per Locus", names = c("A","B","C"),
xlab="Locus", ylab="%_pos_epitope")
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitops per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus", "Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_epitope <- subset(Matchmaker_wb, reactive_epitope == "Pos")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# just reactiv epitope
pos_epitope <- subset(Matchmaker_wb, reactive_epitope == "Pos")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
pos_epitope <- subset(Matchmaker_wb, reactive_epitope == "Pos")
A_Ep <- subset(pos_epitope, c(Locus == "A","Preg" )
A_Ep <- subset(pos_epitope, c(Locus == "A", Preg == "1" ))
A_Ep <- subset(pos_epitope, Locus == "A", Preg == "1" )
View(A_Ep)
A_Ep <- subset(pos_epitope, Locus == "A" & Preg == "1" )
A_Ep <- subset(pos_epitope, Locus == "A" & Preg == "1")
B_Ep <- subset(pos_epitope, Locus == "B" & Preg == "1")
C_Ep <- subset(pos_epitope, Locus == "C" & Preg == "1")
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus for 1 Pregnancy", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_epitope <- subset(Matchmaker_wb, reactive_epitope == "Pos")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A" & Preg > "1")
B_Ep <- subset(pos_epitope, Locus == "B" & Preg > "1")
C_Ep <- subset(pos_epitope, Locus == "C" & Preg > "1")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus over 1 Pregnancy", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_Allele, Locus == "A")
B_Ep <- subset(pos_Allele, Locus == "B")
C_Ep <- subset(pos_Allele, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_Allele,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# just reactiv epitope
pos_epitope <- subset(Matchmaker_wb, reactive_epitope == "Pos")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_Allele, Locus == "A")
B_Ep <- subset(pos_Allele, Locus == "B")
C_Ep <- subset(pos_Allele, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_Allele,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# just reactiv epitope
pos_epitope <- subset(Matchmaker_wb, reactive_epitope == "Pos")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_Allele, Locus == "A")
B_Ep <- subset(pos_Allele, Locus == "B")
C_Ep <- subset(pos_Allele, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_Allele,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# just reactiv epitope
pos_epitope <- subset(Matchmaker_wb, reactive_epitope == "Pos")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
View(preg_MatchMaker_wb_1)
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_Allele, Locus == "A")
B_Ep <- subset(pos_Allele, Locus == "B")
C_Ep <- subset(pos_Allele, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_Allele,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# just reactiv epitope
pos_epitope <- subset(Matchmaker_wb, reactive_epitope == "Pos")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_Allele, Locus == "A")
B_Ep <- subset(pos_Allele, Locus == "B")
C_Ep <- subset(pos_Allele, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_Allele,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_Allele, Locus == "A")
B_Ep <- subset(pos_Allele, Locus == "B")
C_Ep <- subset(pos_Allele, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_Allele,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_Allele, Locus == "A" & Preg > "1")
B_Ep <- subset(pos_Allele, Locus == "B" & Preg > "1")
C_Ep <- subset(pos_Allele, Locus == "C" & Preg > "1")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus over 1 Pregnancy", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_Allele, Locus == "A" & Preg == "1")
B_Ep <- subset(pos_Allele, Locus == "B" & Preg == "1")
C_Ep <- subset(pos_Allele, Locus == "C" & Preg == "1")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus for 1 Pregnancy", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# unique Values
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "%_pos_epitope")])
# just reactiv epitope
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
# get only one Locus
A_Ep <- subset(pos_epitope, Locus == "A")
B_Ep <- subset(pos_epitope, Locus == "B")
C_Ep <- subset(pos_epitope, Locus == "C")
# Boxplot of No reactive Epitope by Locus
boxplot(A_Ep$`%_pos_epitope`,B_Ep$`%_pos_epitope`,C_Ep$`%_pos_epitope`, data=pos_epitope,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
# Importe File
library(readxl)
preg_MatchMaker_wb_1 <- read_excel("C:/Users/Sabrina/Desktop/AAASabrina/preg_MatchMaker_wb_1.xlsm",
sheet = "unique_child_eps_epReg")
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","reactive_epitope", "total_epitope")])
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
A_Ep <- subset(pos_Allele, Locus == "A")
B_Ep <- subset(pos_Allele, Locus == "B")
C_Ep <- subset(pos_Allele, Locus == "C")
Matchmaker_wb <- unique(preg_MatchMaker_wb_1 [c("PatientID","Preg" ,"Locus","MFI_baseline",
"Kid_alleles_ep_MFI.Allele","total_epitope")])
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
A_Ep <- subset(pos_Allele, Locus == "A")
B_Ep <- subset(pos_Allele, Locus == "B")
C_Ep <- subset(pos_Allele, Locus == "C")
boxplot(A_Ep$total_epitope,B_Ep$total_epitope,C_Ep$total_epitope, data=pos_Allele,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="% pos epitope")
boxplot(A_Ep$total_epitope,B_Ep$total_epitope,C_Ep$total_epitope, data=pos_Allele,
main="reactive Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="Number of Mismatched Epitopes")
View(preg_MatchMaker_wb_1)
View(preg_MatchMaker_wb_1)
View(A_Ep)
boxplot(A_Ep$total_epitope,B_Ep$total_epitope,C_Ep$total_epitope, data=pos_Allele,
main="mismatched Epitopes per Locus", names = c("A","B","C"),
xlab="Locus", ylab="Number of mismatched Epitopes")
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope)) +
geom_boxplot(color=factor(pos_Allele$Preg)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope)) +
geom_boxplot(color=factor(pos_Allele$Preg))
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus))
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg)
test <- pos_Allele
test$t1 <- NA
test$t1 <- test$Preg
test$t1[test$t1 == 0] <- "no Pregnancy"
test$t1[test$t1 == 1] <- "1 Pregnancy"
test$t1[test$t1 > 1] <- "over 1 Pregnancy"
Preg_Lable <- pos_Allele
pos_Allele$Preg_Lable <- NA
pos_Allele$Preg_Lable <- pos_Allele$Preg
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == 0] <- "no Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == 1] <- "1 Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable > 1] <- "over 1 Pregnancy"
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg_Lable)
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == 0] <- "no_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == 1] <- "1_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable > 1] <- "over_1_Pregnancy"
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg_Lable)
View(pos_Allele)
pos_Allele <- subset(Matchmaker_wb,  MFI_baseline > 500)
pos_Allele$Preg_Lable <- pos_Allele$Preg
View(test)
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == "0"] <- "no_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == "1"] <- "1_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable >"1"] <- "over_1_Pregnancy"
test <- pos_Allele
test$t1 <- NA
test$t1 <- test$Preg
test$t1[test$t1 == 0] <- "no Pregnancy"
test$t1[test$t1 == 1] <- "1 Pregnancy"
test$t1[test$t1 > 1] <- "over 1 Pregnancy"
Preg_Lable <- pos_Allele
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == "0"] <- "no_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == "1"] <- "1_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable >"1"] <- "over_1_Pregnancy"
test$t1[test$t1 == 1] <- "1 Pregnancy"
test$t1 <- test$Preg
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == "1"] <- "1_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg_Lable == 1] <- "1_Pregnancy"
test$t1 <- test$Preg
test$t1[test$t1 == 1] <- "1 Pregnancy"
test$t1[test$t1 > 1] <- "over 1 Pregnancy"
test$t1 <- test$Preg
test$t1[test$t1 == 1] <- "Pregnancy"
test$t1[test$t1 > 1] <- "over 1 Pregnancy"
test$t1 <- test$Preg
test$t1[test$Preg == 1] <- "1 Pregnancy"
test$t1[test$Preg > 1] <- "over 1 Pregnancy"
View(test)
pos_Allele$Preg_Lable[pos_Allele$Preg == "0"] <- "no_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg == "1"] <- "1_Pregnancy"
pos_Allele$Preg_Lable[pos_Allele$Preg >"1"] <- "over_1_Pregnancy"
View(pos_Allele)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg_Lable)
pos_Allele$Preg_Lable[pos_Allele$Preg == "0"] <- 0
pos_Allele$Preg_Lable[pos_Allele$Preg == "1"] <- 1
pos_Allele$Preg_Lable[pos_Allele$Preg >"1"] <- 2
# Plot
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg_Lable)
pos_Allele$Preg_Lable[pos_Allele$Preg == 0] <- 0
pos_Allele$Preg_Lable[pos_Allele$Preg == 1] <- 1
pos_Allele$Preg_Lable[pos_Allele$Preg >1] <- 2
View(Preg_Lable)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(.~pos_Allele$Preg)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg ~ .)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Preg_Lable)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$Locus)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(pos_Allele$total_epitope)
ggplot(data=pos_Allele, aes(x=pos_Allele$Locus, y=pos_Allele$total_epitope, group=pos_Allele$Locus)) +
geom_boxplot(aes(fill=pos_Allele$Locus)) + facet_grid(as.numeric(pos_Allele$Preg_Lable))
